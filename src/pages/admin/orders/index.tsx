import AdminPageTitle from 'src/components/common/admin/AdminPageTitle';
import Empty from 'src/components/common/admin/Empty';
import CustomPagination from 'src/components/common/shared/CustomPagination';
import AdminAuthLayout from 'src/components/layouts/AdminAuthLayout';
import Head from 'next/head';
import Link from 'next/link';
import { ReactElement, useState } from 'react';
import { HiEye } from 'react-icons/hi';
import { useFetchData } from 'src/hooks/useApi';
import Spinner from 'src/components/common/shared/Spinner';

const Orders = () => {
	const [page, setPage] = useState(1);
	const { data, isLoading } = useFetchData(
		`/api/order/list?page=${page}&limit=8`,
		'orders',
		page,
	);
	return (
		<>
			<Head>
				<title>Orders List</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
			</Head>
			{isLoading ? (
				<Spinner />
			) : (
				<div id="orders">
					<div>
						<AdminPageTitle
							title={'Orders'}
							subtitle={'Admin / Product / Order'}
						/>
					</div>

					{data.status === 'success' ? (
						data.orders.length > 0 ? (
							<div className="bg-white p-10 rounded-lg mt-8">
								<>
									<table className="w-full border-collapse">
										<thead className="bg-[#F0F1FF] border border-[#F0F1FF]">
											<tr>
												<th className="text-left py-3 pl-3">
													<input
														type="checkbox"
														name=""
														id=""
													/>
												</th>
												<th className="text-left py-3">
													Order No.
												</th>
												<th className="text-left py-3">
													Customer
												</th>
												<th className="text-left py-3">
													Created
												</th>
												<th className="text-left py-3">
													Status
												</th>
												<th className="text-left py-3">
													Items
												</th>
												<th className="text-left py-3">
													Total
												</th>
												<th className="text-center py-3 pr-3">
													Action
												</th>
											</tr>
										</thead>
										<tbody>
											{data.orders.map(
												(
													item: {
														email: string;
														qty: number;
														status: string;
														total: number;
														_id: string;
														createdAt: Date;
													},
													index: number,
												) => (
													<tr
														className="border border-[#F0F1FF] mb-2"
														style={{
															marginBottom:
																'10px',
														}}
														key={index}
													>
														<td className="pl-3 py-3">
															<input
																type="checkbox"
																name=""
																id=""
															/>
														</td>
														<td className="py-3">
															{item._id}
														</td>
														<td>{item.email}</td>
														<td className="py-3">
															{new Date(
																item.createdAt,
															).toLocaleString(
																'en-US',
																{
																	timeZone:
																		'UTC',
																	weekday:
																		'short',
																	year: 'numeric',
																	month: 'short',
																	day: 'numeric',
																},
															)}
														</td>
														<td className="py-3">
															<span className="bg-green-300 text-[#000] text-sm py-1 px-2 rounded-md capitalize">
																{item.status}
															</span>
														</td>
														<td className="py-3">
															{item.qty}
														</td>
														<td className="py-3">
															$
															{item.total.toFixed(
																2,
															)}
														</td>
														<td className="pr-3 py-3">
															<div className="flex items-center gap-2 justify-center">
																<Link
																	href={`/admin/orders/${item._id}`}
																	className="action__view"
																>
																	<HiEye className="text-[#000] text-base" />
																</Link>
															</div>
														</td>
													</tr>
												),
											)}
										</tbody>
									</table>
									{data.pages > 1 && (
										<div className="flex items-center justify-end pt-8">
											<CustomPagination
												currentpage={data.currentPage}
												totalPage={data.pages}
												handler={setPage}
											/>
										</div>
									)}
								</>
							</div>
						) : (
							<Empty text={'No Order Yet'} />
						)
					) : (
						<Empty text={'No Order Yet'} />
					)}
				</div>
			)}
		</>
	);
};
Orders.getLayout = function getLayout(page: ReactElement) {
	return <AdminAuthLayout>{page}</AdminAuthLayout>;
};

export default Orders;
