import UserAuthLayout from 'src/components/layouts/UserAuthLayout';
import Head from 'next/head';
import { ReactElement } from 'react';
import { FiPackage } from 'react-icons/fi';
import { GrCart } from 'react-icons/gr';
import { HiOutlineUser } from 'react-icons/hi';
import { MdReviews } from 'react-icons/md';
import { FaChevronUp } from 'react-icons/fa';
import { BiPlus } from 'react-icons/bi';
import { useFetchData } from '../../hooks/useApi';
import { AiOutlineDollarCircle } from 'react-icons/ai';
import Link from 'next/link';

const UserDashboard = () => {
	const { data: userInfo, isLoading } = useFetchData(
		'/api/dashboard/user',
		'userInfo',
		1,
	);

	const Info = [
		{
			title: 'Orders',
			percent: 2,
			value: `${
				isLoading
					? 0
					: userInfo.status === 'success'
					? userInfo.order
					: 0
			}`,
			linkLabel: 'See all orders',
			link: '/user/orders',
			icon: GrCart,
			iconBg: 'bg-[#F9F0D5]',
			iconColor: 'text-[#CBAC63]',
		},
		{
			title: 'Total Spend',
			percent: 5,
			value: `${
				isLoading
					? `$0.00`
					: userInfo.status === 'success'
					? `$${userInfo.totalSpend.toFixed(2)}`
					: `$0.00`
			}`,
			linkLabel: 'See all products',
			link: '/shop',
			icon: AiOutlineDollarCircle,
			iconBg: 'bg-[#FCD5D7]',
			iconColor: 'text-[#944E54]',
		},
		{
			title: 'Products',
			percent: 7,
			value: `${
				isLoading
					? 0
					: userInfo.status === 'success'
					? userInfo.totalProduct
					: 0
			}`,
			linkLabel: 'See all products',
			link: '/shop',
			icon: FiPackage,
			iconBg: 'bg-[#C3E9C0]',
			iconColor: 'text-[#3B7933]',
		},
		{
			title: 'Reviews',
			percent: 1,
			value: `${
				isLoading
					? 0
					: userInfo.status === 'success'
					? userInfo.review
					: 0
			}`,
			linkLabel: 'See all products',
			link: '/shop',
			icon: MdReviews,
			iconBg: 'bg-[#E9CCE7]',
			iconColor: 'text-[#8C4293]',
		},
	];

	return (
		<>
			<Head>
				<title>User Dashboard</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className="user-dashboard">
				<h3 className="user-page-title">User Dashboard</h3>
				<div className="user-stat grid grid-cols-2 gap-5">
					{Info.map((item, index) => (
						<div
							className="single-box bg-white p-4 rounded-md border"
							key={index}
							style={{
								boxShadow: `0px 10px 10px #EAEDF7`,
							}}
						>
							<div className="flex items-center justify-between">
								<h5 className="text-[#C0C0C0] uppercase text-base font-semibold">
									{item.title}
								</h5>
								<div className="flex items-center text-[#29692C] gap-2">
									<FaChevronUp className="text-base font-bold" />
									<span className="text-base font-bold flex items-center">
										<BiPlus />
										{item.percent}%
									</span>
								</div>
							</div>
							<h3 className="text-black text-4xl font-normal py-4">
								{item.value}
							</h3>
							<div className="flex items-center justify-between">
								<Link
									href={item.link}
									className="text-sm text-black font-medium underline"
								>
									{item.linkLabel}
								</Link>
								<span
									className={`h-8 w-8 rounded-md flex items-center justify-center ${item.iconBg}`}
								>
									<item.icon
										className={`text-lg ${item.iconColor}`}
									/>
								</span>
							</div>
						</div>
					))}
				</div>
			</div>
		</>
	);
};
UserDashboard.getLayout = function getLayout(page: ReactElement) {
	return <UserAuthLayout>{page}</UserAuthLayout>;
};
export default UserDashboard;
