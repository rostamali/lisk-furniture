import CustomPagination from 'src/components/common/shared/CustomPagination';
import UserAuthLayout from 'src/components/layouts/UserAuthLayout';
import { ReactElement, useState } from 'react';
import { HiEye } from 'react-icons/hi';
import { FaDownload } from 'react-icons/fa';
import Head from 'next/head';
import Link from 'next/link';
import { useFetchData } from 'src/hooks/useApi';
import { OrderType } from 'src/types';
import Spinner from 'src/components/common/shared/Spinner';
import { MdOutlineHourglassEmpty } from 'react-icons/md';

const Orders = () => {
	const [page, setPage] = useState(1);

	const { data: orders, isLoading } = useFetchData(
		'/api/order/single',
		'userorders',
		1,
	);
	return (
		<>
			<Head>
				<title>Order list</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			{isLoading ? (
				''
			) : orders.status === 'success' ? (
				orders.data.length > 0 ? (
					<div className="user-orders">
						<h3 className="user-page-title">User Orders</h3>
						<table className="w-full border-collapse">
							<thead className="bg-[#F0F1FF] border border-[#F0F1FF]">
								<tr>
									<th className="text-left py-3 pl-3">
										Order No.
									</th>
									<th className="text-left py-3">Status</th>
									<th className="text-left py-3">Items</th>
									<th className="text-left py-3">Total</th>
									<th className="text-center py-3 pr-3">
										Action
									</th>
								</tr>
							</thead>
							<tbody>
								{orders.data.map(
									(item: OrderType, index: number) => (
										<tr
											className="border border-[#F0F1FF] mb-2"
											style={{
												marginBottom: '10px',
											}}
											key={index}
										>
											<td className="py-2 pl-3">
												{item._id}
											</td>
											<td>
												<span className="bg-green-300 text-[#000] text-sm py-1 px-2 rounded-md capitalize">
													{item.status}
												</span>
											</td>
											<td>{item.qty}</td>
											<td>${item.total.toFixed(2)}</td>
											<td className="pr-3">
												<div className="flex items-center gap-2 justify-center">
													<Link
														href={`/user/orders/${item._id}`}
														className="action__view"
													>
														<HiEye className="text-[#000] text-base" />
													</Link>
													<button className="action__delete">
														<FaDownload className="text-[#000] text-base" />
													</button>
												</div>
											</td>
										</tr>
									),
								)}
							</tbody>
						</table>
						{orders.data.length > 6 && (
							<div className="flex items-center justify-end pt-8">
								<CustomPagination
									currentpage={2}
									totalPage={5}
									handler={setPage}
								/>
							</div>
						)}
					</div>
				) : (
					<div className="h-[60vh] w-full flex flex-col items-center gap-6 justify-center">
						<div className="bg-orange-dark h-14 w-14 rounded-full flex items-center justify-center">
							<MdOutlineHourglassEmpty className="text-3xl text-[#fff] animate-spin" />
						</div>
						<h4 className="text-2xl font-semibold text-center capitalize">
							No order found...
						</h4>
					</div>
				)
			) : (
				<div className="flex items-center justify-center h-[450px]">
					<Spinner />
				</div>
			)}
		</>
	);
};
Orders.getLayout = function getLayout(page: ReactElement) {
	return <UserAuthLayout>{page}</UserAuthLayout>;
};
export default Orders;
