import Head from 'next/head';
import UserAuthLayout from 'src/components/layouts/UserAuthLayout';
import { ReactElement, useState } from 'react';
import { useForm } from 'react-hook-form';
import {
	useDeleteData,
	useFetchData,
	useUpdateData,
	useUpdateMultipartData,
} from 'src/hooks/useApi';
import Picture from 'src/components/common/shared/Picture';
import ButtonLoader from 'src/components/common/shared/ButtonLoader';
import { FiUploadCloud } from 'react-icons/fi';
import Spinner from 'src/components/common/shared/Spinner';
import Login from '../login';
import { handleDeleteConfirm } from 'src/utils/confirmation';

const MyAccount = () => {
	const [photo, setPhoto] = useState<File>();
	const { data: user, isLoading: loadingUser } = useFetchData(
		'/api/auth/profile',
		'auth',
		1,
	);
	const { mutate: updateUserMultiPartInfo, isLoading: isUpdateMultipart } =
		useUpdateMultipartData('auth');
	const { mutate: updateUserInfo, isLoading: isUpdate } =
		useUpdateData('auth');

	const { mutate: deleteAccount } = useDeleteData('auth');

	const handleImage = (event: React.ChangeEvent<HTMLInputElement>) => {
		const file = event.target.files;
		if (file) {
			setPhoto(file[0]);
		}
	};
	const { register, handleSubmit } = useForm();
	const updateUser = (data: any) => {
		if (photo) {
			let formData = new FormData();
			formData.append('thumbnail', photo as File);
			formData.append('firstName', data.firstName);
			formData.append('lastName', data.lastName);
			formData.append('email', data.email);
			updateUserMultiPartInfo({
				url: `/api/file/update/user`,
				body: formData,
			});
		} else {
			updateUserInfo({
				url: '/api/auth/update/user',
				body: data,
			});
		}
	};

	const handleDeleteAccount = () => {
		handleDeleteConfirm('Are you sure ?', 'Account will be deleted !').then(
			(result) => {
				if (result.isConfirmed) {
					deleteAccount(`/api/auth/user/delete`);
				}
			},
		);
	};

	return (
		<>
			<Head>
				<title>My user account - Rostam</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			{loadingUser ? (
				<div className="flex items-center justify-center h-[70vh]">
					<Spinner />
				</div>
			) : user.status === 'success' ? (
				<div className="my-info">
					<h3 className="user-page-title">User Info</h3>
					<form
						className="admin-form"
						onSubmit={handleSubmit(updateUser)}
					>
						<div className="w-2/5 flex flex-col items-start gap-8 pb-12">
							{photo ? (
								<Picture
									link={URL.createObjectURL(photo)}
									classList={
										'h-[120px] w-[120px] border-2 border-orange-dark rounded-full'
									}
									alt={''}
								/>
							) : (
								<Picture
									link={`/uploads/${user.data.thumbnail}`}
									classList={
										'h-[120px] w-[120px] border-2 border-orange-dark rounded-full'
									}
									alt={user.data.name}
								/>
							)}
							<div>
								<label
									htmlFor="user-thumbnail"
									className="bg-orange-dark py-3 text-white rounded-md cursor-pointer flex items-center justify-center gap-3 px-4"
								>
									<FiUploadCloud />
									Upload Thumbanil
								</label>
								<input
									id="user-thumbnail"
									type="file"
									className="hidden"
									onChange={handleImage}
								/>
							</div>
						</div>
						<div className="grid grid-cols-2 gap-8">
							<div className="input__group flex flex-col">
								<label htmlFor="name" className="input__label">
									Username
								</label>
								<input
									id="name"
									type="text"
									disabled
									defaultValue={user.data.userName}
									className="input__field"
									{...register('name')}
								/>
							</div>
							<div className="input__group">
								<label htmlFor="email" className="input__label">
									E-mail
								</label>
								<input
									type="email"
									id="email"
									disabled
									defaultValue={user.data.email}
									className="input__field"
									{...register('email')}
								/>
							</div>
							<div className="input__group flex flex-col">
								<label
									htmlFor="firstName"
									className="input__label"
								>
									First Name
								</label>
								<input
									id="firstName"
									type="text"
									defaultValue={user.data.firstName}
									className="input__field"
									{...register('firstName')}
								/>
							</div>
							<div className="input__group flex flex-col">
								<label
									htmlFor="lastName"
									className="input__label"
								>
									Last Name
								</label>
								<input
									id="lastName"
									type="text"
									defaultValue={user.data.lastName}
									className="input__field"
									{...register('lastName')}
								/>
							</div>
						</div>
						<div className="flex items-center justify-between mt-8">
							<button
								className="submit__btn h-[52px] w-[172px]"
								disabled={
									isUpdateMultipart || isUpdate ? true : false
								}
							>
								{isUpdateMultipart || isUpdate ? (
									<ButtonLoader />
								) : (
									'Save Changes'
								)}
							</button>
							<button
								type="button"
								className="outline__btn"
								onClick={handleDeleteAccount}
							>
								Delete Account
							</button>
						</div>
					</form>
				</div>
			) : (
				<Login />
			)}
		</>
	);
};

MyAccount.getLayout = function getLayout(page: ReactElement) {
	return <UserAuthLayout>{page}</UserAuthLayout>;
};

export default MyAccount;
