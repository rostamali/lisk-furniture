import dbConnect from 'src/backend/dbConnect';
import Product from 'src/backend/models/productmodel';
import CustomPagination from 'src/components/common/shared/CustomPagination';
import ProductCard from 'src/components/common/shared/ProductCard';
import Spinner from 'src/components/common/shared/Spinner';
import DefaultLayout from 'src/components/layouts/DefaultLayout';
import { ProductType } from 'src/types';
import Head from 'next/head';
import { ReactElement, useState } from 'react';
import { BsShop } from 'react-icons/bs';
import { FiGrid } from 'react-icons/fi';
import { TbListDetails } from 'react-icons/tb';
import { useFetchData } from 'src/hooks/useApi';

const Shop = () => {
	const [page, setPage] = useState(1);

	const { data: products, isLoading } = useFetchData(
		`/api/product/all?limit=6&page=${page}`,
		'products',
		page,
	);

	return (
		<>
			<Head>
				<title>Lisk - Shop</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div id="shop" className="border-0 border-b-2 bg-gray-light">
				{isLoading ? (
					<div className="flex items-center justify-center h-[450px]">
						<Spinner />
					</div>
				) : products.status === 'success' ? (
					products.data.length > 0 ? (
						<div className="container mx-auto py-24">
							<div className="shop__wrapper grid md:grid-cols-4 grid-cols-1 lg:gap-7 md:gap-4">
								<div className="sidebar col-span-1">
									<div className="sidebar__wrapper bg-white py-8 px-7">
										{/* <Filters /> */}
									</div>
								</div>
								<div className="shop__products col-span-3 md:mt-0 mt-6">
									<div className="shop-product__wrapper font-mulish">
										<div className="shop-product__header">
											<div className="shop-product__filter-items bg-white py-3 px-4 flex justify-between items-center gap-4">
												<div className="flex items-center gap-6">
													<button className="bg-[#EAEDF7] p-[5px]">
														<FiGrid className="text-black text-[25px]" />
													</button>
													<button>
														<TbListDetails className="text-black text-[25px]" />
													</button>
												</div>
												<div className="search-result flex items-center gap-8">
													<p className="short-subtitle">
														1 - {products.length} of
														5 Results
													</p>
													<select
														id="countries"
														className="bg-gray-light text-black font-medium text-base border-0 focus:ring-0"
													>
														<option>
															Product Sort By
															Price
														</option>
														<option value="US">
															United States
														</option>
														<option value="CA">
															Canada
														</option>
														<option value="FR">
															France
														</option>
														<option value="DE">
															Germany
														</option>
													</select>
												</div>
											</div>
										</div>
										{/* shop products */}
										<div className="shop-products mt-8 bg-gray-light">
											<div className="grid lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 lg:gap-6 gap-4 pb-5">
												{products.data.map(
													(
														product: ProductType,
														index: number,
													) => (
														<ProductCard
															template={product}
															key={index}
														/>
													),
												)}
											</div>
											{products.pages > 1 && (
												<CustomPagination
													currentpage={
														products.currentPage
													}
													totalPage={products.pages}
													handler={setPage}
												/>
											)}
										</div>
									</div>
								</div>
							</div>
						</div>
					) : (
						<div className="flex flex-col items-center py-24">
							<div className="box-shadow h-24 w-24 flex items-center justify-center rounded-full">
								<BsShop className="text-5xl text-black" />
							</div>

							<h2 className="text-black md:text-4xl font-mulish text-xl font-bold my-8">
								Store is Empty
							</h2>
						</div>
					)
				) : (
					<div className="flex flex-col items-center py-24">
						<div className="box-shadow h-24 w-24 flex items-center justify-center rounded-full">
							<BsShop className="text-5xl text-black" />
						</div>

						<h2 className="text-black md:text-4xl font-mulish text-xl font-bold my-8">
							Store is Empty
						</h2>
					</div>
				)}
			</div>
		</>
	);
};

Shop.getLayout = function getLayout(page: ReactElement) {
	return <DefaultLayout>{page}</DefaultLayout>;
};
export default Shop;
