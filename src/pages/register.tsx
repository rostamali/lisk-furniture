import { yupResolver } from '@hookform/resolvers/yup';
import Head from 'next/head';
import { useForm } from 'react-hook-form';
import AuthFooter from 'src/components/auth/AuthFooter';
import AuthHeader from 'src/components/auth/AuthHeader';
import AuthInput from 'src/components/auth/AuthInput';
import ButtonLoader from 'src/components/common/shared/ButtonLoader';
import { signupValidation } from 'src/utils/validators';
import { useCreateData } from 'src/hooks/useApi';
import { useRouter } from 'next/router';
import Logo from 'src/components/common/shared/Logo';
import Link from 'next/link';

const Register = () => {
	const signupTemplate = [
		{
			title: 'Username',
			name: 'username',
			type: 'text',
		},
		{
			title: 'Email',
			name: 'email',
			type: 'email',
		},
		{
			title: 'Password',
			name: 'password',
			type: 'password',
		},
	];

	const {
		register,
		handleSubmit,
		formState: { errors },
	} = useForm({ resolver: yupResolver(signupValidation) });
	const { mutate: signup, isLoading } = useCreateData(
		'/api/auth/signup',
		'auth',
	);
	const router = useRouter();
	const onSubmit = handleSubmit((user) => {
		signup(user);
		setTimeout(() => {
			router.push('/');
		}, 2000);
	});

	return (
		<>
			<Head>
				<title>Register your account</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div id="auth" className="bg-[#EAEDF7]">
				<div className="container mx-auto font-mulish">
					<div className="h-screen flex items-center">
						<div className="lg:w-2/4 md:w-2/3 mx-auto bg-white md:p-12 p-8">
							<div className="flex items-center justify-center pb-6">
								<Link href="/">
									<Logo color={'#000'} />
								</Link>
							</div>
							<AuthHeader title="Register account" />
							<form onSubmit={onSubmit}>
								<AuthInput
									register={register}
									template={signupTemplate}
									errors={errors}
								/>
								<button
									className="btn-shadow w-full bg-orange-dark text-white uppercase text-base tracking-wider py-3 rounded h-[45px]"
									type="submit"
									disabled={isLoading}
								>
									{isLoading ? <ButtonLoader /> : 'Sign Up'}
								</button>
							</form>
							<AuthFooter
								text={'Already have account'}
								link={'/login'}
								linkText={'Sign In'}
							/>
						</div>
					</div>
				</div>
			</div>
		</>
	);
};

export default Register;
