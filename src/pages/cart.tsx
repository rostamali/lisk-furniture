import {
	QtyCardType,
	decreaseCartItem,
	increaseCartItem,
	removeFromCart,
} from 'src/redux/slices/cartSlice';
import { RootState } from 'src/redux/store';
import Head from 'next/head';
import Link from 'next/link';
import { FiShoppingBag } from 'react-icons/fi';
import { useSelector, useDispatch } from 'react-redux';
import { AiOutlineMinus, AiOutlinePlus } from 'react-icons/ai';
import { TiTimes } from 'react-icons/ti';
import Picture from 'src/components/common/shared/Picture';
import { ReactElement } from 'react';
import ProtectedRouted from 'src/components/layouts/ProtectedRoute';
import dynamic from 'next/dynamic';
const CartTotal = dynamic(
	() => import('src/components/common/shared/CartTotal'),
	{
		ssr: false,
	},
);

const Cart = () => {
	const dispatch = useDispatch();
	const { cartItem } = useSelector((state: RootState) => state.cart);

	return (
		<>
			<Head>
				<title>Lisk - Cart</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" type="image/x-icon" href="/favicon.ico" />
			</Head>
			<div
				id="cart-body"
				className="py-24 font-mulish border-b-2 border-gray-light"
			>
				<div className="container mx-auto">
					{cartItem.length > 0 ? (
						<div className="grid lg:grid-cols-3 grid-cols-1 lg:gap-8 lg:gap-4">
							<div className="col-span-2">
								{/* Cart items */}
								<div className="cart-items__header border-2 border-gray-light rounded-md flex items-center justify-between mb-12 p-5">
									<div className="flex items-center">
										<input
											id="select-all"
											type="checkbox"
											value=""
											className="md:w-6 md:h-6 w-5 h-5 border-2 rounded-md"
										/>
										<label
											htmlFor="select-all"
											className="text-black md:text-lg text-base font-medium md:pl-5 pl-3"
										>
											Select All
										</label>
									</div>
									<div className="flex items-end md:items-center md:flex-row flex-col">
										<button className="md:text-base text-sm uppercase font-semibold text-red-600 md:mt-0 mt-2">
											remove
										</button>
									</div>
								</div>
								<div className="">
									{cartItem &&
										cartItem.map(
											(item: QtyCardType, index) => (
												<div
													className="cart-items font-mulish border border-gray-light p-5 rounded-md mb-3"
													key={index}
												>
													<div className="flex items-center md:flex-row flex-col lg:gap-8 gap-4">
														<div>
															<button
																className="w-6 h-6 bg-[#dc3545] flex items-center justify-center text-white rounded-md"
																onClick={() =>
																	dispatch(
																		removeFromCart(
																			item,
																		),
																	)
																}
															>
																<TiTimes className="text-lg" />
															</button>
														</div>
														<div>
															<Picture
																link={`/uploads/${item.thumbnail}`}
																alt={item.title}
																classList={
																	'h-[80px] w-[80px] rounded-md'
																}
															/>
														</div>
														<h4 className="text-black font-bold text-base md:text-left text-center flex-1">
															{item.title}
														</h4>
														<div className="cart-qty bg-gray-light flex items-center justify-center px-4 rounded-md">
															<button
																onClick={() =>
																	dispatch(
																		decreaseCartItem(
																			item,
																		),
																	)
																}
															>
																<AiOutlineMinus className="text-xl" />
															</button>
															<div className="h-12 w-12 border-1 border-orange-dark flex items-center justify-center">
																<span className="text-black font-bold text-xl">
																	{item.qty}
																</span>
															</div>
															<button
																onClick={() =>
																	dispatch(
																		increaseCartItem(
																			item,
																		),
																	)
																}
															>
																<AiOutlinePlus className="text-xl" />
															</button>
														</div>
														<div>
															<p className="sale-price text-black text-lg font-semibold">
																$
																{item.salePrice}
															</p>
														</div>
													</div>
												</div>
											),
										)}
								</div>
							</div>
							<div className="cart-totals__body">
								<CartTotal />
							</div>
						</div>
					) : (
						<div className="flex flex-col items-center">
							<div className="box-shadow h-24 w-24 flex items-center justify-center rounded-full">
								<FiShoppingBag className="text-5xl text-black" />
							</div>

							<h2 className="text-black md:text-4xl font-mulish text-xl font-bold my-8">
								Your cart is Empty
							</h2>

							<Link
								href="/shop"
								className="inline-block bg-orange-dark text-white uppercase text-base px-6 py-3"
							>
								Countinue shopping now
							</Link>
						</div>
					)}
				</div>
			</div>
		</>
	);
};
Cart.getLayout = function getLayout(page: ReactElement) {
	return <ProtectedRouted>{page}</ProtectedRouted>;
};
export default Cart;
